{
    "includeCoAuthoredBy": false,
    "env": {
        "ENABLE_BACKGROUND_TASKS": "1",
        "FORCE_AUTO_BACKGROUND_TASKS": "1",
        "CLAUDE_CODE_ENABLE_UNIFIED_READ_TOOL": "1",
        "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1",
        "BASH_MAX_TIMEOUT_MS": "6000000",
        "BASH_DEFAULT_TIMEOUT_MS": "6000000",
        "BASH_MAX_OUTPUT_LENGTH": "50000",
        "MCP_TIMEOUT": "30000",
        "MCP_TOOL_TIMEOUT": "600000",
        "MAX_MCP_OUTPUT_TOKENS": "50000",
        "DISABLE_COST_WARNINGS": "1"
    },
    "statusLine": {
        "type": "command",
        "command": "bun x ccusage@latest statusline",
        "padding": 0
    },
    "enableAllProjectMcpServers": true,
    "mcpServers": {
        "linear": {
          "type": "sse",
          "url": "https://mcp.linear.app/sse"
        },
        "context7": {
          "type": "stdio",
          "command": "bun",
          "args": ["x", "-y", "@upstash/context7-mcp@latest"],
          "env": {}
        },
        "octocode": {
          "type": "stdio",
          "command": "bun",
          "args": ["x", "-y", "octocode-mcp@latest"],
          "env": {}
        },
        "shadcn": {
            "type": "stdio",
            "command": "bun",
            "args": ["x", "-y", "shadcn@latest", "mcp"],
            "env": {}
        },
        "chrome-devtools": {
            "type": "stdio",
            "command": "bun",
            "args": ["x", "-y", "chrome-devtools-mcp@latest"],
            "env": {}
          }
      },
      "hooks": {
        "PostToolUse": [
            {
                "matcher": "Edit|MultiEdit|Write",
                "hooks": [
                    {
                        "type": "command",
                        "command": "jq -r '.tool_input.file_path // empty' | while read file_path; do if [[ -f \"$file_path\" ]]; then if [[ \"$file_path\" == *.sol ]]; then if command -v forge >/dev/null 2>&1; then forge fmt \"$file_path\" 2>/dev/null || true; fi; else bunx prettier --write \"$file_path\" --ignore-unknown 2>/dev/null || true; fi; fi; done"
                    }
                ]
            }
        ],
        "PreToolUse": [
            {
                "matcher": "Bash",
                "hooks": [
                    {
                        "type": "command",
                        "command": "jq -r '.tool_input.command // empty' | grep -qE '\\b(rm -rf|sudo|chmod 777|>\\s*/dev/s)' && echo 'Warning: Potentially dangerous command detected' >&2 && exit 0 || exit 0"
                    }
                ]
            },
            {
                "matcher": "Write|Edit|MultiEdit",
                "hooks": [
                    {
                        "type": "command",
                        "command": "jq -r '.tool_input.file_path // empty' | grep -qE '\\.(env|secrets?|key|pem|crt)$|/\\.(ssh|aws|config)/|node_modules/|dist/|build/' && echo 'Warning: Modifying sensitive or generated file' >&2 && exit 0 || exit 0"
                    }
                ]
            }
        ]
    }
}